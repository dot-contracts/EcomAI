version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecomvideoai-postgres
    environment:
      POSTGRES_DB: ecomvideoai_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your-secure-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Application
  api:
    build: .
    container_name: ecomvideoai-api
    ports:
      - "5000:5000"
    environment:
      # Database connection
      ConnectionStrings__DefaultConnection: "Host=postgres;Database=ecomvideoai_db;Username=postgres;Password=${POSTGRES_PASSWORD:-your-secure-password}"
      
      # JWT Configuration
      Jwt__SecretKey: ${JWT_SECRET_KEY:-EcomVideoAI-Super-Secret-Key-That-Should-Be-Changed-In-Production-123456789}
      Jwt__Issuer: ${JWT_ISSUER:-EcomVideoAI}
      Jwt__Audience: ${JWT_AUDIENCE:-EcomVideoAI-Client}
      
      # Freepik API
      FreepikSettings__ApiKey: ${FREEPIK_API_KEY:-your-freepik-api-key}
      FreepikSettings__BaseUrl: "https://api.freepik.com/v1"
      
      # CORS
      Cors__AllowedOrigins__0: "https://yourapp.com"
      Cors__AllowedOrigins__1: "exp://your-expo-app"
      
      # Logging
      Serilog__MinimumLevel: "Information"
      
      # ASP.NET Core
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: "http://0.0.0.0:5000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data: 